-Comprendiendo el estado de docker
docker --version
docker info
docker run hello-world
docker ps
docker ps -a
docker inspect ID-CONTENEDOR
docker run --name hello-platzi hello world
docker rename hello-platzi hola-platzi
docker rm NOMBRE O ID
docker container prune

-El modo interactivo
docker run ubuntu
docker run -it ubuntu
cat /etc/lsb-release

-Ciclo de vida de un contenedor
exit
docker run --name alwaysup -d ubuntu tail -f /dev/null
docker exec -it alwaysup bash
ps
ps -aux
docker inspect --format '{{.State.Pid}}' alwaysup
kill -9 ID(docker stop alwaysup)

-Exponiendo contenedores
docker run -d --name proxy nginx
docker stop proxy
docker rm proxy
docker rm -f alwaysup
docker run --name proxy -p 8080:80 nginx
docker run --name proxy -d -p 8080:80 nginx
docker logs proxy
docker logs -f proxy
docker logs --tail 10 -f proxy

-Bind mounts
docker run -d --name db mongo
docker exec -it db bash
mongosh
show dbs
use platzi
db.users.insert({"nombre":"guido"})
db.users.find()
exit
docker rm -f db
docker run -d --name db -v /Users/gvilarino/code/dockerdata/mongodata:/data/db_mongo
						Maquina anfitriona   :    Contenedor

-Volumenes
docker volume ls
docker volume create dbdata
docker run -d --name db --mount src=dbdata,dst=/data/db mongo
docker inspect db

-Insertar y extraer archivos de un contenedor
docker run -d --name copytest ubuntu tail -f /dev/null
docker cp prueba.text copytext:/testing/test.txt
docker cp copytext:/testing localtesting

-Conceptos fundamentales de Docker:im√°genes
docker image ls
docker pull ubuntu:20.04

-Construyendo una image propia
touch Dockerfile
----------------------------
Dentro escribimos:

FROM ubuntu:latest

RUN touch /usr/src/hola-platzi.txt
----------------------------
docker build -t ubuntu:platzi .

docker run -it ubuntu:platzi

docker login

docker tag ubuntu:platzi gvilarino/ubuntu:platzi

docker push gvilarino/ubuntu:platzi

-El sistema de capas

docker history ubuntu:platzi

dive ubuntu:platzi

-Usando Docker para desarrollar aplicaciones
git clone https://github.com/platzi/docker
docker build -t platziapp . (creo la imagen local)
docker image ls (listo las imagenes locales)
docker run --rm -p 3000:3000 platziapp (creo el contenedor y cuando se detenga se borra, lo publica el puerto 3000)
docker ps (veo los contenedores activos)

-Docker Compose: la herramienta todo en uno
docker rm -f app
docker-compose up -d
docker-compose ps
docker-compose exec servicio bash
docker-compose down
Para cuando el contenedor no quiera parar: 
sudo aa-remove-unknown




